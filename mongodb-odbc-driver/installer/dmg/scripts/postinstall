#!/usr/bin/env bash

# Variables the installer application automatically passes along
# $0 : Returns the path to the script
# $1 : Returns the path to the package
# $2 : Returns the target location (for example: /Applications)
# $3 : Returns the target volume (for example: /Volumes/Macintosh HD)

LOGS_PATH="/tmp/postinstall.log"

err(){
    if [[ ! -e $LOGS_PATH ]]; then
        touch $LOGS_PATH
    fi
    echo "Err: $@" >> /tmp/postinstall.log ;
}

info(){
    if [[ ! -e $LOGS_PATH ]]; then
        touch $LOGS_PATH
    fi
     echo "Info: $@" >> /tmp/postinstall.log ;
}

ODBC_PATH="$3/Library/ODBC"
INI="$ODBC_PATH/odbcinst.ini"
INSTALL_ROOT="/Library/MongoDB/ODBC/"
# Get the latest installed version
LATEST_VERSION=$(ls $INSTALL_ROOT/| grep -E "[0-9]\.[0-9]\.[0-9]" | sort | cut -d '/' -f2 | tail -n 1)
INSTALL_PATH=$INSTALL_ROOT$LATEST_VERSION
DRIVERS_SECTION="ODBC Drivers"
MDB_UNICODE="MongoDB Unicode ODBC $LATEST_VERSION"
MDB_ANSI="MongoDB ANSI ODBC $LATEST_VERSION"
MDB_UNICODE_DRIVERS="$INSTALL_PATH/libmdbodbcw.so"
MDB_ANSI_DRIVERS="$INSTALL_PATH/libmdbodbca.so"

# Create the ODBC directory if it doesn't exist already
if [[ ! -e $ODBC_PATH ]]; then
    info "Creating $ODBC_PATH directory"
    mkdir -p $ODBC_PATH
elif [[ ! -d $ODBC_PATH ]]; then
     err "$ODBC_PATH already exists but is not a directory"
     exit 1   
fi

#Update the odbcinst.ini with the latest driver path and mark it as installed
if [[ ! -e $INI ]]; then
    info "$INI does not exists, creating"

    touch $INI
    echo "[ODBC Drivers]" >> $INI
    echo "$MDB_UNICODE = Installed" >> $INI
    echo "$MDB_ANSI = Installed" >> $INI
    echo "" >> $INI
    echo "[$MDB_UNICODE]" >> $INI
    echo "Driver = $MDB_UNICODE_DRIVERS" >> $INI
    echo "" >> $INI
    echo "[$MDB_ANSI]" >> $INI
    echo "Driver = $MDB_ANSI_DRIVERS" >> $INI
    CREATED_NEW_INI_FILE=1
fi

#If there was an existing odbcinst file, update the odbcinst.ini
# with the latest driver path
if [[ $CREATED_NEW_INI_FILE == 0 ]]; then
    BACK_INI="$INI.back"
    info "Back up file $BACK_INI"
    IN_ODBC_DRIVERS_SECTION=0
    IN_MDB_UNICODE_DRIVER_SECTION=0
    IN_MDB_ANSI_DRIVER_SECTION=0
    MDB_UNICODE_DRIVER_INSTALLED=0
    MDB_ANSI_DRIVER_INSTALLED=0
    MDB_UNICODE_DRIVER_CONFIGURED=0
    MDB_ANSI_DRIVER_CONFIGURED=0

    # Make a copy of the existing ini file
    cp $INI $BACK_INI
    if [[ -e $BACK_INI ]]; then
        # Clear the INI file
        > $INI

        # Read the backup odbcinst.ini.back file and recreate the new updated odbcinst.ini one
        while IFS= read -r line
        do
            if [[ "$line" =~ ^\[.*\]$ ]]; then
                # Found a section
                if grep -iqF "[ODBC Drivers]" <<< "$line"; then
                    # Found the [ODBC Drivers] section 
                    # where all drivers are listed
                    IN_ODBC_DRIVERS_SECTION=1
                elif grep -iqF "[$MDB_UNICODE]" <<< "$line"; then
                    # Found the [MongoDB Unicode ODBC {version}] section
                    IN_MDB_UNICODE_DRIVER_SECTION=1
                    IN_MDB_ANSI_DRIVER_SECTION=0
                    IN_ODBC_DRIVERS_SECTION=0
                    echo "IN_MDB_UNICODE_DRIVER_SECTION=1"
                elif grep -iqF "[$MDB_ANSI]" <<< "$line"; then
                    # Found the [MongoDB ANSI ODBC {version}] section
                    IN_MDB_ANSI_DRIVER_SECTION=1
                    IN_MDB_UNICODE_DRIVER_SECTION=0
                    IN_ODBC_DRIVERS_SECTION=0
                    echo "IN_MDB_ANSI_DRIVER_SECTION=1"
                else
                    # Found a new section right after [ODBC Drivers]
                    # Need to add the drivers lines in [ODBC Drivers] section
                    if [ $IN_ODBC_DRIVERS_SECTION == 1 ]; then
                        if [ $MDB_UNICODE_DRIVER_INSTALLED == 0 ]; then
                            echo "$MDB_UNICODE = Installed" >> $INI
                        elif [ $MDB_ANSI_DRIVER_INSTALLED == 0 ]; then
                            echo "$MDB_ANSI = Installed" >> $INI
                        fi
                    fi
                    IN_ODBC_DRIVERS_SECTION=0
                    IN_MDB_ANSI_DRIVER_SECTION=0
                    IN_MDB_UNICODE_DRIVER_SECTION=0
                fi
                 # Add an empty line before this next section
                if [ $IN_ODBC_DRIVERS_SECTION == 0 ]; then
                    echo "" >> $INI
                fi
                echo "$line" >> $INI
            # Skip empty lines
            elif [[ ! -z "${line// }" ]]; then
                if [ $IN_ODBC_DRIVERS_SECTION == 1 ]  && grep -iqF "$MDB_UNICODE" <<< "$line" ; then
                    # Found the latest unicode MongoDB driver already configured
                    # Make sure to mark it "Installed"
                    echo "$MDB_UNICODE = Installed" >> $INI
                    MDB_UNICODE_DRIVER_INSTALLED=1
                elif [ $IN_ODBC_DRIVERS_SECTION == 1 ] && grep -iqF "$MDB_ANSI" <<< "$line" ; then
                    # Found the latest ANSI MongoDB driver already configured
                    # Make sure to mark it "Installed"
                    echo "$MDB_ANSI = Installed" >> $INI
                    MDB_ANSI_DRIVER_INSTALLED=1
                elif [ $IN_MDB_UNICODE_DRIVER_SECTION == 1 ] && grep -iqF "Driver" <<< "$line" ; then
                    echo "IN_MDB_UNICODE_DRIVER_SECTION : $IN_MDB_UNICODE_DRIVER_SECTION"
                    # Make sure the driver install path is correct
                    echo "Driver = $MDB_UNICODE_DRIVERS" >> $INI
                    MDB_UNICODE_DRIVER_CONFIGURED=1
                elif [ $IN_MDB_ANSI_DRIVER_SECTION == 1 ] && grep -iqF "Driver" <<< "$line" ; then
                    # Make sure the driver install path is correct
                    echo "Driver = $MDB_ANSI_DRIVERS" >> $INI
                    MDB_ANSI_DRIVER_CONFIGURED=1
                else
                    echo "$line" >> $INI
                fi        
            fi
        done < "$BACK_INI"

        # Configure the driver if needed by adding their respective sections at the end of the odbcinst.ini file
        if [ $MDB_UNICODE_DRIVER_CONFIGURED == 0 ]; then
            echo "" >> $INI
            echo "[$MDB_UNICODE]" >> $INI
            echo "Driver = $MDB_UNICODE_DRIVERS" >> $INI
        elif [ $MDB_ANSI_DRIVER_CONFIGURED == 0 ]; then
            echo "" >> $INI
            echo "[$MDB_ANSI]" >> $INI
            echo "Driver = $MDB_ANSI_DRIVERS" >> $INI
        fi
    else
        err "An error occured while making a backup of the existing odbcinst.ini file"
        exit 1
    fi
fi

# Done, everything went well
info "postinstall script was successful"
exit 0